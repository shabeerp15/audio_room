/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v92.7.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CheckPushRequest, CheckPushResponse, CheckSNSRequest, CheckSNSResponse, CheckSQSRequest, CheckSQSResponse, CreateBlockListRequest, CreateChannelTypeRequest, CreateChannelTypeResponse, GetApplicationResponse, GetBlockListResponse, GetRateLimitsResponse, ListBlockListResponse, ListChannelTypesResponse, ListPushProvidersResponse, Response, UpdateAppRequest, UpdateBlockListRequest, UpdateChannelTypeRequest, UpdateChannelTypeResponse } from '../models';
export interface CheckPushOperationRequest {
    checkPushRequest: CheckPushRequest | null;
}
export interface CheckSNSOperationRequest {
    checkSNSRequest: CheckSNSRequest | null;
}
export interface CheckSQSOperationRequest {
    checkSQSRequest: CheckSQSRequest | null;
}
export interface CreateBlockListOperationRequest {
    createBlockListRequest: CreateBlockListRequest | null;
}
export interface CreateChannelTypeOperationRequest {
    createChannelTypeRequest: CreateChannelTypeRequest | null;
}
export interface DeleteBlockListRequest {
    name: string;
}
export interface DeleteChannelTypeRequest {
    name: string;
}
export interface DeletePushProviderRequest {
    type: DeletePushProviderTypeEnum;
    name: string;
}
export interface GetBlockListRequest {
    name: string;
}
export interface GetChannelTypeRequest {
    name: string;
}
export interface GetRateLimitsRequest {
    serverSide?: boolean;
    android?: boolean;
    ios?: boolean;
    web?: boolean;
    endpoints?: string;
}
export interface UpdateAppOperationRequest {
    updateAppRequest: UpdateAppRequest | null;
}
export interface UpdateBlockListOperationRequest {
    name: string;
    updateBlockListRequest: UpdateBlockListRequest | null;
}
export interface UpdateChannelTypeOperationRequest {
    name: string;
    updateChannelTypeRequest: UpdateChannelTypeRequest | null;
}
/**
 *
 */
export declare class SettingsApi extends runtime.BaseAPI {
    /**
     * Sends a test message via push, this is a test endpoint to verify your push settings
     * Check push
     */
    checkPushRaw(requestParameters: CheckPushOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckPushResponse>>;
    /**
     * Sends a test message via push, this is a test endpoint to verify your push settings
     * Check push
     */
    checkPush(requestParameters: CheckPushOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckPushResponse>;
    /**
     * Validates Amazon SNS configuration
     * Check SNS
     */
    checkSNSRaw(requestParameters: CheckSNSOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckSNSResponse>>;
    /**
     * Validates Amazon SNS configuration
     * Check SNS
     */
    checkSNS(requestParameters: CheckSNSOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckSNSResponse>;
    /**
     * Validates Amazon SQS credentials
     * Check SQS
     */
    checkSQSRaw(requestParameters: CheckSQSOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckSQSResponse>>;
    /**
     * Validates Amazon SQS credentials
     * Check SQS
     */
    checkSQS(requestParameters: CheckSQSOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckSQSResponse>;
    /**
     * Creates a new application blocklist, once created the blocklist can be used by any channel type
     * Create block list
     */
    createBlockListRaw(requestParameters: CreateBlockListOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Response>>;
    /**
     * Creates a new application blocklist, once created the blocklist can be used by any channel type
     * Create block list
     */
    createBlockList(requestParameters: CreateBlockListOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Response>;
    /**
     * Creates new channel type
     * Create channel type
     */
    createChannelTypeRaw(requestParameters: CreateChannelTypeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateChannelTypeResponse>>;
    /**
     * Creates new channel type
     * Create channel type
     */
    createChannelType(requestParameters: CreateChannelTypeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateChannelTypeResponse>;
    /**
     * Deletes previously created application blocklist
     * Delete block list
     */
    deleteBlockListRaw(requestParameters: DeleteBlockListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Response>>;
    /**
     * Deletes previously created application blocklist
     * Delete block list
     */
    deleteBlockList(requestParameters: DeleteBlockListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Response>;
    /**
     * Deletes channel type
     * Delete channel type
     */
    deleteChannelTypeRaw(requestParameters: DeleteChannelTypeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Response>>;
    /**
     * Deletes channel type
     * Delete channel type
     */
    deleteChannelType(requestParameters: DeleteChannelTypeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Response>;
    /**
     * Delete a push provider from v2 with multi bundle/package support. v1 isn\'t supported in this endpoint
     * Delete a push provider
     */
    deletePushProviderRaw(requestParameters: DeletePushProviderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Response>>;
    /**
     * Delete a push provider from v2 with multi bundle/package support. v1 isn\'t supported in this endpoint
     * Delete a push provider
     */
    deletePushProvider(requestParameters: DeletePushProviderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Response>;
    /**
     * This method returns the application settings
     * Get App Settings
     */
    getAppRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetApplicationResponse>>;
    /**
     * This method returns the application settings
     * Get App Settings
     */
    getApp(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetApplicationResponse>;
    /**
     * Returns block list by given name
     * Get block list
     */
    getBlockListRaw(requestParameters: GetBlockListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBlockListResponse>>;
    /**
     * Returns block list by given name
     * Get block list
     */
    getBlockList(requestParameters: GetBlockListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBlockListResponse>;
    /**
     * Gets channel type
     * Get channel type
     */
    getChannelTypeRaw(requestParameters: GetChannelTypeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Response>>;
    /**
     * Gets channel type
     * Get channel type
     */
    getChannelType(requestParameters: GetChannelTypeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Response>;
    /**
     * Get rate limits usage and quotas
     * Get rate limits
     */
    getRateLimitsRaw(requestParameters: GetRateLimitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRateLimitsResponse>>;
    /**
     * Get rate limits usage and quotas
     * Get rate limits
     */
    getRateLimits(requestParameters?: GetRateLimitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRateLimitsResponse>;
    /**
     * Returns all available block lists
     * List block lists
     */
    listBlockListsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListBlockListResponse>>;
    /**
     * Returns all available block lists
     * List block lists
     */
    listBlockLists(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListBlockListResponse>;
    /**
     * Lists all available channel types
     * List channel types
     */
    listChannelTypesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListChannelTypesResponse>>;
    /**
     * Lists all available channel types
     * List channel types
     */
    listChannelTypes(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListChannelTypesResponse>;
    /**
     * List details of all push providers.
     * List push providers
     */
    listPushProvidersRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListPushProvidersResponse>>;
    /**
     * List details of all push providers.
     * List push providers
     */
    listPushProviders(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListPushProvidersResponse>;
    /**
     * This method updates one or more application settings
     * Update App Settings
     */
    updateAppRaw(requestParameters: UpdateAppOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Response>>;
    /**
     * This method updates one or more application settings
     * Update App Settings
     */
    updateApp(requestParameters: UpdateAppOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Response>;
    /**
     * Updates contents of the block list
     * Update block list
     */
    updateBlockListRaw(requestParameters: UpdateBlockListOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Response>>;
    /**
     * Updates contents of the block list
     * Update block list
     */
    updateBlockList(requestParameters: UpdateBlockListOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Response>;
    /**
     * Updates channel type
     * Update channel type
     */
    updateChannelTypeRaw(requestParameters: UpdateChannelTypeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateChannelTypeResponse>>;
    /**
     * Updates channel type
     * Update channel type
     */
    updateChannelType(requestParameters: UpdateChannelTypeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateChannelTypeResponse>;
}
/**
 * @export
 */
export declare const DeletePushProviderTypeEnum: {
    readonly APN: "apn";
    readonly FIREBASE: "firebase";
    readonly HUAWEI: "huawei";
    readonly XIAOMI: "xiaomi";
};
export type DeletePushProviderTypeEnum = typeof DeletePushProviderTypeEnum[keyof typeof DeletePushProviderTypeEnum];
